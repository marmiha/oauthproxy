name: CI Worker (Golang)
on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
        id: go

      - name: Check out source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Sonarqube report
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=gume1a_oauth-proxy_AYZm3vqmPvHIgh4c6jWj

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4

        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch,prefix=edge-
            type=semver,pattern={{raw}},enable={{is_default_branch}}
            type=semver,pattern={{version}},enable={{is_default_branch}}
            type=semver,pattern=v{{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') && github.ref == format('refs/heads/{0}', 'master') }}
            type=semver,pattern={{major}}.{{minor}},enable={{is_default_branch}}
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}

      - name: Docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./build/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

